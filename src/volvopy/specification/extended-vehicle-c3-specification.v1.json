{
    "openapi": "3.0.1",
    "info": {
        "title": "Extended Vehicle",
        "description": "This API allows to get latest information of the vehicle such as distance driven, lock status, windows and doors, rooftop or sunroof and engine status of connected Volvo Cars vehicles remotely.",
        "contact": {},
        "version": "1.0"
    },
    "servers": [
        {
            "url": "https://api.volvocars.com/extended-vehicle"
        }
    ],
    "paths": {
        "/v1/vehicles": {
            "get": {
                "tags": [
                    "Vehicle-List"
                ],
                "summary": "Get Vehicle List",
                "description": "Provides all current valid relations between an Volvo Id (user) and its connected vehicles. Returns a list of VIN numbers together with timestamp of relation",
                "operationId": "GetVehicleList",
                "parameters": [
                    {
                        "name": "vcc-api-operationId",
                        "in": "header",
                        "description": "A transaction unique id which can be used do identify the transaction in integrated systems",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleListResponse"
                                },
                                "example": {
                                    "vehicles": [
                                        {
                                            "id": "string",
                                            "timestamp": 1599996619
                                        }
                                    ]
                                }
                            },
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleListResponse"
                                },
                                "example": {
                                    "vehicles": [
                                        {
                                            "id": "string",
                                            "timestamp": 1599996619
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains an unaccepted input",
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "exveErrorId": "string",
                                    "exveErrorMsg": "string",
                                    "exveErrorRef": "string",
                                    "exveNote": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "exveErrorId": "string",
                                    "exveErrorMsg": "string",
                                    "exveErrorRef": "string",
                                    "exveNote": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "exveErrorId": "string",
                                    "exveErrorMsg": "string",
                                    "exveErrorRef": "string",
                                    "exveNote": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "exveErrorId": "string",
                                    "exveErrorMsg": "string",
                                    "exveErrorRef": "string",
                                    "exveNote": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "exveErrorId": "string",
                                    "exveErrorMsg": "string",
                                    "exveErrorRef": "string",
                                    "exveNote": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/vehicles/{vin}/resources": {
            "get": {
                "tags": [
                    "Resource-List"
                ],
                "summary": "Get Resource List",
                "description": "used to get a list of the available resources (status-fields) to the accessing-party",
                "operationId": "GetResourceList",
                "parameters": [
                    {
                        "name": "vin",
                        "in": "path",
                        "description": "Vehicle identification number",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "vcc-api-operationId",
                        "in": "header",
                        "description": "A transaction unique id which can be used do identify the transaction in integrated systems",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceListResponse"
                                },
                                "example": {
                                    "resources": [
                                        {
                                            "href": "string",
                                            "name": "string",
                                            "version": "string"
                                        }
                                    ]
                                }
                            },
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceListResponse"
                                },
                                "example": {
                                    "resources": [
                                        {
                                            "href": "string",
                                            "name": "string",
                                            "version": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains an unaccepted input",
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "exveErrorId": "string",
                                    "exveErrorMsg": "string",
                                    "exveErrorRef": "string",
                                    "exveNote": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "exveErrorId": "string",
                                    "exveErrorMsg": "string",
                                    "exveErrorRef": "string",
                                    "exveNote": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "exveErrorId": "string",
                                    "exveErrorMsg": "string",
                                    "exveErrorRef": "string",
                                    "exveNote": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "exveErrorId": "string",
                                    "exveErrorMsg": "string",
                                    "exveErrorRef": "string",
                                    "exveNote": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "exveErrorId": "string",
                                    "exveErrorMsg": "string",
                                    "exveErrorRef": "string",
                                    "exveNote": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/vehicles/{vin}/resources/{resource}": {
            "get": {
                "tags": [
                    "Resource-Value"
                ],
                "summary": "Get Resource Value",
                "description": "used to get the latest collected value of the specified resource",
                "operationId": "GetResourceValue",
                "parameters": [
                    {
                        "name": "vin",
                        "in": "path",
                        "description": "Vehicle identification number",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "name of the resource like odometer, cabOpen",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "vcc-api-operationId",
                        "in": "header",
                        "description": "A transaction unique id which can be used do identify the transaction in integrated systems",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceInstanceResponse"
                                },
                                "example": {
                                    "resourceValue": {
                                        "timestamp": 1599996619,
                                        "unit": "string",
                                        "value": "string"
                                    }
                                }
                            },
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceInstanceResponse"
                                },
                                "example": {
                                    "resourceValue": {
                                        "timestamp": 1599996619,
                                        "unit": "string",
                                        "value": "string"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request contains an unaccepted input",
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "exveErrorId": "string",
                                    "exveErrorMsg": "string",
                                    "exveErrorRef": "string",
                                    "exveNote": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "exveErrorId": "string",
                                    "exveErrorMsg": "string",
                                    "exveErrorRef": "string",
                                    "exveNote": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "exveErrorId": "string",
                                    "exveErrorMsg": "string",
                                    "exveErrorRef": "string",
                                    "exveNote": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "exveErrorId": "string",
                                    "exveErrorMsg": "string",
                                    "exveErrorRef": "string",
                                    "exveNote": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                },
                                "example": {
                                    "exveErrorId": "string",
                                    "exveErrorMsg": "string",
                                    "exveErrorRef": "string",
                                    "exveNote": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ErrorResponse": {
                "type": "object",
                "properties": {
                    "exveErrorId": {
                        "type": "string"
                    },
                    "exveErrorMsg": {
                        "type": "string"
                    },
                    "exveErrorRef": {
                        "type": "string"
                    },
                    "exveNote": {
                        "type": "string"
                    }
                }
            },
            "ResourceInstance": {
                "type": "object",
                "properties": {
                    "timestamp": {
                        "type": "integer",
                        "description": "unix timestamp value",
                        "format": "int64",
                        "example": "1599996619.0"
                    },
                    "unit": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "ResourceInstanceResponse": {
                "type": "object",
                "properties": {
                    "resourceValue": {
                        "$ref": "#/components/schemas/ResourceInstance"
                    }
                }
            },
            "ResourceListResponse": {
                "type": "object",
                "properties": {
                    "resources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourcePointer"
                        }
                    }
                }
            },
            "ResourcePointer": {
                "type": "object",
                "properties": {
                    "href": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                }
            },
            "VehicleListResponse": {
                "type": "object",
                "properties": {
                    "vehicles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VehicleRelation"
                        }
                    }
                }
            },
            "VehicleRelation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "integer",
                        "description": "unix timestamp value",
                        "format": "int64",
                        "example": "1599996619.0"
                    }
                }
            }
        },
        "securitySchemes": {
            "apiKeyHeader": {
                "type": "apiKey",
                "name": "vcc-api-key",
                "in": "header",
                "description": "Your application’s VCC API Key."
            },
            "accessToken": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "description": "The access token issued by Volvo ID identity system."
            }
        }
    },
    "security": [
        {
            "apiKeyHeader": []
        },
        {
            "accessToken": []
        }
    ]
}
